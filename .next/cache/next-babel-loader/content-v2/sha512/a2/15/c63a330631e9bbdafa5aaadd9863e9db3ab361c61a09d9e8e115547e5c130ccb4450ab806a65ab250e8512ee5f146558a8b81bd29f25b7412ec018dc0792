{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/codespace/workspace/NLW-MoveIt/src/components/Countdown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useCallback, useMemo, useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\n\nvar Countdown = function Countdown() {\n  _s();\n\n  var _useState = useState(0.5 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var _useMemo = useMemo(function () {\n    var minutes = Math.floor(time / 60);\n    return String(minutes).padStart(2, '0').split('');\n  }, [time]),\n      minuteLeft = _useMemo[0],\n      minuteRight = _useMemo[1];\n\n  var _useMemo2 = useMemo(function () {\n    var seconds = Math.floor(time % 60);\n    return String(seconds).padStart(2, '0').split('');\n  }, [time]),\n      secondLeft = _useMemo2[0],\n      secondRight = _useMemo2[1];\n\n  var handleStartCountdownClick = useCallback(function () {\n    setIsActive(true);\n  }, []);\n  var handleResetCoundownClick = useCallback(function () {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.5 * 60);\n  }, []);\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinish;\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: handleResetCoundownClick,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: handleStartCountdownClick,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Countdown, \"sY/M+3joLmjYRYbIH1QJiLNEGME=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/home/codespace/workspace/NLW-MoveIt/src/components/Countdown.tsx"],"names":["useCallback","useMemo","useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","String","padStart","split","minuteLeft","minuteRight","seconds","secondLeft","secondRight","handleStartCountdownClick","handleResetCoundownClick","clearTimeout","setTimeout","setHasFinish","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\n\nlet countdownTimeout: NodeJS.Timeout;\n\nconst Countdown = () => {\n  const [time, setTime] = useState(0.5 * 60);\n  const [isActive, setIsActive] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n\n  const [minuteLeft, minuteRight] = useMemo(() => {\n    const minutes = Math.floor(time / 60);\n    return String(minutes).padStart(2, '0').split('');\n  }, [time]);\n\n  const [secondLeft, secondRight] = useMemo(() => {\n    const seconds = Math.floor(time % 60);\n    return String(seconds).padStart(2, '0').split('');\n  }, [time]);\n\n\n  const handleStartCountdownClick = useCallback(() => {\n    setIsActive(true);\n  }, []);\n\n  const handleResetCoundownClick = useCallback(() => {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.5 * 60);\n  }, []);\n\n  useEffect(() => {\n    if (isActive && time > 0){\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000)\n    } else if (isActive && time === 0){\n      setHasFinish\n    }\n  }, [isActive, time]);\n\n\treturn (\n\t\t<>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRight}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRight}</span>\n        </div>\n      </div>\n\n      {isActive ? (\n        <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={handleResetCoundownClick}>Abandonar ciclo</button>\n        ) : (\n        <button type=\"button\" className={styles.countdownButton} onClick={handleStartCountdownClick}>Iniciar um ciclo</button>\n\n      )}\n\t\t</>\n\t);\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}